package msc.pizza4you.gui.panels;

import java.util.ArrayList;
import javax.swing.JPanel;
import msc.pizza4you.core.Engine;
import msc.pizza4you.data.PizzaConfiguration;
import msc.pizza4you.data.PizzaModel;
import msc.pizza4you.gui.components.PizzaImagePanel;

/**
 *
 * @author Keshan De Silva
 */
public class ResultPanel extends AbstractPanel
{    
    public ResultPanel()
    {
        initComponents();
    }

    public void updateResultSet()
    {
        topRecomendationPanel.removeAll();
        otherRecomendationPanel.removeAll();
        
        ArrayList<PizzaModel> result = Engine.getInstance().getResult();
        
        int i = 0;
        for (PizzaModel pizzaModel : result)
        {
            PizzaImagePanel pizzaImagePanel = new PizzaImagePanel(pizzaModel);
            
            if (i < 3)
            {
                topRecomendationPanel.add(pizzaImagePanel);
            }
            else
            {
                otherRecomendationPanel.add(pizzaImagePanel);
            }
            
            i++;
        }
        
        topRecomendationPanel.revalidate();
        otherRecomendationPanel.revalidate();
        
        topRecomendationPanel.updateUI();
        otherRecomendationPanel.updateUI();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        topRecomendationPanel = new javax.swing.JPanel();
        scrollPanel = new javax.swing.JScrollPane();
        otherRecomendationPanel = new javax.swing.JPanel();

        topRecomendationPanel.setLayout(new java.awt.GridLayout(0, 3));

        scrollPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        otherRecomendationPanel.setLayout(new java.awt.GridLayout());
        scrollPanel.setViewportView(otherRecomendationPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topRecomendationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(topRecomendationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel otherRecomendationPanel;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JPanel topRecomendationPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getPanelTitle()
    {
        return "Pizza Recommendations";
    }

    @Override
    public PizzaConfiguration updatePizzaConfigurations()
    {
        throw new UnsupportedOperationException("Result Panel will not update the model");
    }
    
    @Override
    public JPanel getKeywordPanel()
    {
        throw new UnsupportedOperationException("Result Panel will not have keyword panel");
    }
}
